<!DOCTYPE html>
<html>
<head>
<title>XTENS</title>

<!-- Viewport mobile tag for sensible mobile support -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


<!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

<!--STYLES-->
<link rel="stylesheet" href="/styles/importer.css">
<link rel="stylesheet" href="/dependencies/select2/select2.css">
<link rel="stylesheet" href="/dependencies/async/deps/nodeunit.css">
<link rel="stylesheet" href="/dependencies/datatables/styles/jquery.dataTables.css">
<link rel="stylesheet" href="/dependencies/dropzone/styles/basic.css">
<link rel="stylesheet" href="/dependencies/font-awesome/styles/font-awesome.css">
<link rel="stylesheet" href="/dependencies/pikaday/styles/pikaday.css">
<link rel="stylesheet" href="/dependencies/select2-bootstrap-css/select2-bootstrap.css">
<!--STYLES END-->
</head>

<style type="text/css">
body{
background:"/home/valentina/Pictures/pippo.png";
}
nav ul li:hover ul {
    display: block;
    width:200px;
    padding:5px;
    height:auto;
}

.dropdown a{
    color:black;
    font-size: 13px;
    font-weight: bold;
}
div#footer{position: relative; 
bottom:0; 
z-index:0;
width: 100%;
margin-top:50%;

     color: #000;text-align:center;}

nav ul li{
    text-align:center;
}



</style>
<body>

<nav class="navbar navbar-default" role="navigation">
    <div class="navbar-header">
        <p class="navbar-text" data-toggle="collapse"><%= __("xtens") %></p>

    </div>
    <ul class ="nav navbar-nav navbar-right ">
        <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" ><%= __("admin") %><span class="caret"></span></a>
        <ul class="dropdown-menu">
            <li><a href="#/groups"><%= __("groups") %></a></li>
            <li><a href="#/operators"><%= __("operators") %></a></li>
        </ul>
        </li>

        <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" ><%= __("data-type-management") %><span class="caret"></span></a>
        <ul class="dropdown-menu">
            <li><a href="#"></a></li>
        </ul>

        </li>

        <li class="dropdown">
        <a  href="#" class="dropdown-toggle" data-toggle="dropdown" data-toggle="collapse"><%= __("search") %><span class="caret"></span></a>
        <ul class="dropdown-menu">
            <li><a href="#/query"><%= __("data-search") %></a></li>
            <li><a href="#/data/new"><%= __("new-data") %></a></li>
        </ul>


        </li>

    </ul>
</nav>







<%- body %>



<!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

<!--TEMPLATES-->
<script type="text/javascript" src="/jst.js"></script>
<!--TEMPLATES END-->


<!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript
=
    -->

<!--SCRIPTS-->
<script src="/dependencies/jquery/js/jquery.js"></script>
<script src="/dependencies/lodash/js/lodash.js"></script>
<script src="/dependencies/backbone/js/backbone.js"></script>
<script src="/dependencies/backbone.stickit/backbone.stickit.js"></script>
<script src="/dependencies/select2/select2.js"></script>
<script src="/dependencies/parsleyjs/parsley.js"></script>
<script src="/dependencies/pikaday/js/pikaday.js"></script>
<script src="/dependencies/moment/moment.js"></script>
<script src="/dependencies/dropzone/js/dropzone.js"></script>
<script src="/dependencies/datatables/js/jquery.dataTables.js"></script>
<script src="/dependencies/async/lib/async.js"></script>
<script src="/js/application/xtens.js"></script>
<script src="/js/application/utils.js"></script>
<script src="/js/application/Router.js"></script>
<script src="/js/modules/i18n.js"></script>
<script src="/js/modules/XtensConstants.js"></script>
<script src="/js/modules/Utils.js"></script>
<script src="/js/modules/MetadataComponent.js"></script>
<script src="/js/modules/MetadataField.js"></script>
<script src="/js/modules/MetadataLoop.js"></script>
<script src="/js/modules/MetadataGroup.js"></script>
<script src="/js/modules/DataType.js"></script>
<script src="/js/modules/XtensTable.js"></script>
<script src="/js/modules/Operator.js"></script>
<script src="/js/modules/Group.js"></script>
<script src="/js/modules/PersonalDetails.js"></script>
<script src="/js/modules/FileManager.js"></script>
<script src="/js/modules/Data.js"></script>
<script src="/js/modules/Subject.js"></script>
<script src="/js/modules/Project.js"></script>
<script src="/js/modules/Sample.js"></script>
<script src="/js/modules/AdminAssociation.js"></script>
<script src="/js/modules/Query.js"></script>
<!--SCRIPTS END-->

<div id="spacer"></div>
<div id="footer">
    <p>Â© 2014</p>
</div>
</body>
</html>
